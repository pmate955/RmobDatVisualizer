name: Release RMOB dat visualizer

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Release]

    env:
      Solution_Name: RmobDatVisualizer.sln
      Wpf_Project_Path: RmobDatVisualizer.GUI\RmobDatVisualizer.GUI.csproj
      Wap_Project_Directory: RmobDatVisualizer.GUI

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build MSIX package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    - name: Archive output
      run: Compress-Archive -Path "${{ env.Wap_Project_Directory }}\bin\Release\net6.0-windows\*" -DestinationPath "release-package.zip"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        files: release-package.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}